// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/cluster-control-plane-machine-set-operator/pkg/machineproviders (interfaces: MachineProvider)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	machineproviders "github.com/openshift/cluster-control-plane-machine-set-operator/pkg/machineproviders"
)

// MockMachineProvider is a mock of MachineProvider interface.
type MockMachineProvider struct {
	ctrl     *gomock.Controller
	recorder *MockMachineProviderMockRecorder
}

// MockMachineProviderMockRecorder is the mock recorder for MockMachineProvider.
type MockMachineProviderMockRecorder struct {
	mock *MockMachineProvider
}

// NewMockMachineProvider creates a new mock instance.
func NewMockMachineProvider(ctrl *gomock.Controller) *MockMachineProvider {
	mock := &MockMachineProvider{ctrl: ctrl}
	mock.recorder = &MockMachineProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMachineProvider) EXPECT() *MockMachineProviderMockRecorder {
	return m.recorder
}

// CreateMachine mocks base method.
func (m *MockMachineProvider) CreateMachine(arg0 int32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMachine", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMachine indicates an expected call of CreateMachine.
func (mr *MockMachineProviderMockRecorder) CreateMachine(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMachine", reflect.TypeOf((*MockMachineProvider)(nil).CreateMachine), arg0)
}

// DeleteMachine mocks base method.
func (m *MockMachineProvider) DeleteMachine(arg0 *machineproviders.ObjectRef) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMachine", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMachine indicates an expected call of DeleteMachine.
func (mr *MockMachineProviderMockRecorder) DeleteMachine(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMachine", reflect.TypeOf((*MockMachineProvider)(nil).DeleteMachine), arg0)
}

// GetMachineInfos mocks base method.
func (m *MockMachineProvider) GetMachineInfos() ([]machineproviders.MachineInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMachineInfos")
	ret0, _ := ret[0].([]machineproviders.MachineInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMachineInfos indicates an expected call of GetMachineInfos.
func (mr *MockMachineProviderMockRecorder) GetMachineInfos() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMachineInfos", reflect.TypeOf((*MockMachineProvider)(nil).GetMachineInfos))
}
